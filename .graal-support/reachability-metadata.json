{
  "reflection": [
    {
      "type": "[B"
    },
    {
      "type": "[C"
    },
    {
      "type": "[D"
    },
    {
      "type": "[F"
    },
    {
      "type": "[I"
    },
    {
      "type": "[J"
    },
    {
      "type": "[Ljava.lang.Object;"
    },
    {
      "type": "[Ljava.lang.StackTraceElement;"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[S"
    },
    {
      "type": "[Z"
    },
    {
      "type": "clojure.asm.ClassReader"
    },
    {
      "type": "clojure.asm.ClassVisitor"
    },
    {
      "type": "clojure.asm.ClassWriter"
    },
    {
      "type": "clojure.asm.Opcodes"
    },
    {
      "type": "clojure.asm.Type"
    },
    {
      "type": "clojure.asm.commons.GeneratorAdapter"
    },
    {
      "type": "clojure.asm.commons.Method"
    },
    {
      "type": "clojure.core.ArrayChunk"
    },
    {
      "type": "clojure.core.ArrayManager"
    },
    {
      "type": "clojure.core.Eduction"
    },
    {
      "type": "clojure.core.IVecImpl"
    },
    {
      "type": "clojure.core.Inst"
    },
    {
      "type": "clojure.core.Vec"
    },
    {
      "type": "clojure.core.VecNode"
    },
    {
      "type": "clojure.core.VecSeq"
    },
    {
      "type": "clojure.core.async.Mix"
    },
    {
      "type": "clojure.core.async.Mult"
    },
    {
      "type": "clojure.core.async.Mux"
    },
    {
      "type": "clojure.core.async.Pub"
    },
    {
      "type": "clojure.core.async.impl.buffers.DroppingBuffer"
    },
    {
      "type": "clojure.core.async.impl.buffers.FixedBuffer"
    },
    {
      "type": "clojure.core.async.impl.buffers.PromiseBuffer"
    },
    {
      "type": "clojure.core.async.impl.buffers.SlidingBuffer"
    },
    {
      "type": "clojure.core.async.impl.buffers__init"
    },
    {
      "type": "clojure.core.async.impl.channels.MMC"
    },
    {
      "type": "clojure.core.async.impl.channels.ManyToManyChannel"
    },
    {
      "type": "clojure.core.async.impl.channels__init"
    },
    {
      "type": "clojure.core.async.impl.concurrent__init"
    },
    {
      "type": "clojure.core.async.impl.dispatch__init"
    },
    {
      "type": "clojure.core.async.impl.exec.threadpool__init"
    },
    {
      "type": "clojure.core.async.impl.go.Call"
    },
    {
      "type": "clojure.core.async.impl.go.Case"
    },
    {
      "type": "clojure.core.async.impl.go.CatchHandler"
    },
    {
      "type": "clojure.core.async.impl.go.CondBr"
    },
    {
      "type": "clojure.core.async.impl.go.Const"
    },
    {
      "type": "clojure.core.async.impl.go.CustomTerminator"
    },
    {
      "type": "clojure.core.async.impl.go.Dot"
    },
    {
      "type": "clojure.core.async.impl.go.EndFinally"
    },
    {
      "type": "clojure.core.async.impl.go.Fn"
    },
    {
      "type": "clojure.core.async.impl.go.IEmittableInstruction"
    },
    {
      "type": "clojure.core.async.impl.go.IInstruction"
    },
    {
      "type": "clojure.core.async.impl.go.ITerminator"
    },
    {
      "type": "clojure.core.async.impl.go.InstanceInterop"
    },
    {
      "type": "clojure.core.async.impl.go.Jmp"
    },
    {
      "type": "clojure.core.async.impl.go.PopTry"
    },
    {
      "type": "clojure.core.async.impl.go.PushTry"
    },
    {
      "type": "clojure.core.async.impl.go.RawCode"
    },
    {
      "type": "clojure.core.async.impl.go.Recur"
    },
    {
      "type": "clojure.core.async.impl.go.Return"
    },
    {
      "type": "clojure.core.async.impl.go.StaticCall"
    },
    {
      "type": "clojure.core.async.impl.go__init"
    },
    {
      "type": "clojure.core.async.impl.ioc_macros__init"
    },
    {
      "type": "clojure.core.async.impl.mutex__init"
    },
    {
      "type": "clojure.core.async.impl.protocols.Buffer"
    },
    {
      "type": "clojure.core.async.impl.protocols.Channel"
    },
    {
      "type": "clojure.core.async.impl.protocols.Executor"
    },
    {
      "type": "clojure.core.async.impl.protocols.Handler"
    },
    {
      "type": "clojure.core.async.impl.protocols.ReadPort"
    },
    {
      "type": "clojure.core.async.impl.protocols.UnblockingBuffer"
    },
    {
      "type": "clojure.core.async.impl.protocols.WritePort"
    },
    {
      "type": "clojure.core.async.impl.protocols__init"
    },
    {
      "type": "clojure.core.async.impl.timers.TimeoutQueueEntry"
    },
    {
      "type": "clojure.core.async.impl.timers__init"
    },
    {
      "type": "clojure.core.async__init"
    },
    {
      "type": "clojure.core.cache.BasicCache"
    },
    {
      "type": "clojure.core.cache.CacheProtocol"
    },
    {
      "type": "clojure.core.cache.FIFOCache"
    },
    {
      "type": "clojure.core.cache.FnCache"
    },
    {
      "type": "clojure.core.cache.LIRSCache"
    },
    {
      "type": "clojure.core.cache.LRUCache"
    },
    {
      "type": "clojure.core.cache.LUCache"
    },
    {
      "type": "clojure.core.cache.SoftCache"
    },
    {
      "type": "clojure.core.cache.TTLCacheQ"
    },
    {
      "type": "clojure.core.cache__init"
    },
    {
      "type": "clojure.core.memoize.PluggableMemoization"
    },
    {
      "type": "clojure.core.memoize.RetryingDelay"
    },
    {
      "type": "clojure.core.memoize__init"
    },
    {
      "type": "clojure.core.protocols.CollReduce"
    },
    {
      "type": "clojure.core.protocols.Datafiable"
    },
    {
      "type": "clojure.core.protocols.IKVReduce"
    },
    {
      "type": "clojure.core.protocols.InternalReduce"
    },
    {
      "type": "clojure.core.protocols.Navigable"
    },
    {
      "type": "clojure.core.protocols__init"
    },
    {
      "type": "clojure.core.server__init"
    },
    {
      "type": "clojure.core__init"
    },
    {
      "type": "clojure.core_deftype__init"
    },
    {
      "type": "clojure.core_print__init"
    },
    {
      "type": "clojure.core_proxy__init"
    },
    {
      "type": "clojure.data.priority_map.PersistentPriorityMap"
    },
    {
      "type": "clojure.data.priority_map__init"
    },
    {
      "type": "clojure.datafy__init"
    },
    {
      "type": "clojure.edn__init"
    },
    {
      "type": "clojure.genclass__init"
    },
    {
      "type": "clojure.gvec__init"
    },
    {
      "type": "clojure.instant__init"
    },
    {
      "type": "clojure.java.io.Coercions"
    },
    {
      "type": "clojure.java.io.IOFactory"
    },
    {
      "type": "clojure.java.io__init"
    },
    {
      "type": "clojure.lang.AFn"
    },
    {
      "type": "clojure.lang.AFunction"
    },
    {
      "type": "clojure.lang.APersistentMap$KeySeq"
    },
    {
      "type": "clojure.lang.APersistentMap$ValSeq"
    },
    {
      "type": "clojure.lang.ASeq"
    },
    {
      "type": "clojure.lang.BigInt"
    },
    {
      "type": "clojure.lang.ChunkBuffer"
    },
    {
      "type": "clojure.lang.Compiler"
    },
    {
      "type": "clojure.lang.Compiler$CompilerException"
    },
    {
      "type": "clojure.lang.Cons"
    },
    {
      "type": "clojure.lang.Counted"
    },
    {
      "type": "clojure.lang.DynamicClassLoader"
    },
    {
      "type": "clojure.lang.ExceptionInfo"
    },
    {
      "type": "clojure.lang.Fn"
    },
    {
      "type": "clojure.lang.IChunk"
    },
    {
      "type": "clojure.lang.IChunkedSeq"
    },
    {
      "type": "clojure.lang.IDeref"
    },
    {
      "type": "clojure.lang.IExceptionInfo"
    },
    {
      "type": "clojure.lang.IFn"
    },
    {
      "type": "clojure.lang.IHashEq"
    },
    {
      "type": "clojure.lang.IKVReduce"
    },
    {
      "type": "clojure.lang.IMeta"
    },
    {
      "type": "clojure.lang.IObj"
    },
    {
      "type": "clojure.lang.IPersistentCollection"
    },
    {
      "type": "clojure.lang.IPersistentList"
    },
    {
      "type": "clojure.lang.IPersistentMap"
    },
    {
      "type": "clojure.lang.IPersistentSet"
    },
    {
      "type": "clojure.lang.IPersistentVector"
    },
    {
      "type": "clojure.lang.IProxy"
    },
    {
      "type": "clojure.lang.IRecord"
    },
    {
      "type": "clojure.lang.IReduceInit"
    },
    {
      "type": "clojure.lang.IRef"
    },
    {
      "type": "clojure.lang.IReference"
    },
    {
      "type": "clojure.lang.ISeq"
    },
    {
      "type": "clojure.lang.IType"
    },
    {
      "type": "clojure.lang.Keyword"
    },
    {
      "type": "clojure.lang.LazilyPersistentVector"
    },
    {
      "type": "clojure.lang.LazySeq"
    },
    {
      "type": "clojure.lang.LineNumberingPushbackReader"
    },
    {
      "type": "clojure.lang.LispReader$ReaderException"
    },
    {
      "type": "clojure.lang.MapEntry"
    },
    {
      "type": "clojure.lang.Murmur3"
    },
    {
      "type": "clojure.lang.Namespace"
    },
    {
      "type": "clojure.lang.Numbers"
    },
    {
      "type": "clojure.lang.PersistentArrayMap$Seq"
    },
    {
      "type": "clojure.lang.PersistentHashMap"
    },
    {
      "type": "clojure.lang.PersistentHashMap$NodeSeq"
    },
    {
      "type": "clojure.lang.PersistentHashSet"
    },
    {
      "type": "clojure.lang.PersistentTreeMap"
    },
    {
      "type": "clojure.lang.PersistentVector"
    },
    {
      "type": "clojure.lang.PersistentVector$ChunkedSeq"
    },
    {
      "type": "clojure.lang.RT",
      "methods": [
        {
          "name": "aget",
          "parameterTypes": [
            "float[]",
            "int"
          ]
        },
        {
          "name": "aget",
          "parameterTypes": [
            "int[]",
            "int"
          ]
        }
      ]
    },
    {
      "type": "clojure.lang.Ratio"
    },
    {
      "type": "clojure.lang.ReaderConditional"
    },
    {
      "type": "clojure.lang.Reflector"
    },
    {
      "type": "clojure.lang.SeqIterator"
    },
    {
      "type": "clojure.lang.Sequential"
    },
    {
      "type": "clojure.lang.StringSeq"
    },
    {
      "type": "clojure.lang.Symbol"
    },
    {
      "type": "clojure.lang.TaggedLiteral"
    },
    {
      "type": "clojure.lang.Util"
    },
    {
      "type": "clojure.lang.Var"
    },
    {
      "type": "clojure.lang.Volatile"
    },
    {
      "type": "clojure.main__init"
    },
    {
      "type": "clojure.reflect.AsmReflector"
    },
    {
      "type": "clojure.reflect.ClassResolver"
    },
    {
      "type": "clojure.reflect.Constructor"
    },
    {
      "type": "clojure.reflect.Field"
    },
    {
      "type": "clojure.reflect.JavaReflector"
    },
    {
      "type": "clojure.reflect.Method"
    },
    {
      "type": "clojure.reflect.Reflector"
    },
    {
      "type": "clojure.reflect.TypeReference"
    },
    {
      "type": "clojure.reflect.java__init"
    },
    {
      "type": "clojure.reflect__init"
    },
    {
      "type": "clojure.set__init"
    },
    {
      "type": "clojure.spec.alpha.Spec"
    },
    {
      "type": "clojure.spec.alpha.Specize"
    },
    {
      "type": "clojure.spec.alpha__init"
    },
    {
      "type": "clojure.spec.gen.alpha__init"
    },
    {
      "type": "clojure.string__init"
    },
    {
      "type": "clojure.tools.analyzer.ast__init"
    },
    {
      "type": "clojure.tools.analyzer.env__init"
    },
    {
      "type": "clojure.tools.analyzer.jvm.ExceptionThrown"
    },
    {
      "type": "clojure.tools.analyzer.jvm.utils__init"
    },
    {
      "type": "clojure.tools.analyzer.jvm__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.add_binding_atom__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.cleanup__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.constant_lifter__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.elide_meta__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.emit_form__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.jvm.analyze_host_expr__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.jvm.annotate_host_info__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.jvm.annotate_loops__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.jvm.annotate_tag__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.jvm.box__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.jvm.classify_invoke__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.jvm.constant_lifter__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.jvm.emit_form__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.jvm.fix_case_test__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.jvm.infer_tag__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.jvm.validate__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.jvm.validate_loop_locals__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.jvm.validate_recur__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.jvm.warn_on_reflection__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.source_info__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.trim__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.uniquify__init"
    },
    {
      "type": "clojure.tools.analyzer.passes.warn_earmuff__init"
    },
    {
      "type": "clojure.tools.analyzer.passes__init"
    },
    {
      "type": "clojure.tools.analyzer.utils__init"
    },
    {
      "type": "clojure.tools.analyzer__init"
    },
    {
      "type": "clojure.tools.reader.default_data_readers__init"
    },
    {
      "type": "clojure.tools.reader.impl.commons__init"
    },
    {
      "type": "clojure.tools.reader.impl.errors__init"
    },
    {
      "type": "clojure.tools.reader.impl.inspect__init"
    },
    {
      "type": "clojure.tools.reader.impl.utils__init"
    },
    {
      "type": "clojure.tools.reader.reader_types.IPushbackReader"
    },
    {
      "type": "clojure.tools.reader.reader_types.IndexingPushbackReader"
    },
    {
      "type": "clojure.tools.reader.reader_types.IndexingReader"
    },
    {
      "type": "clojure.tools.reader.reader_types.InputStreamReader"
    },
    {
      "type": "clojure.tools.reader.reader_types.PushbackReader"
    },
    {
      "type": "clojure.tools.reader.reader_types.PushbackReaderCoercer"
    },
    {
      "type": "clojure.tools.reader.reader_types.Reader"
    },
    {
      "type": "clojure.tools.reader.reader_types.ReaderCoercer"
    },
    {
      "type": "clojure.tools.reader.reader_types.SourceLoggingPushbackReader"
    },
    {
      "type": "clojure.tools.reader.reader_types.StringReader"
    },
    {
      "type": "clojure.tools.reader.reader_types__init"
    },
    {
      "type": "clojure.tools.reader__init"
    },
    {
      "type": "clojure.uuid__init"
    },
    {
      "type": "clojure.walk__init"
    },
    {
      "type": "io.github.humbleui.skija.BackendRenderTarget"
    },
    {
      "type": "io.github.humbleui.skija.Canvas"
    },
    {
      "type": "io.github.humbleui.skija.ColorSpace"
    },
    {
      "type": "io.github.humbleui.skija.DirectContext"
    },
    {
      "type": "io.github.humbleui.skija.Font"
    },
    {
      "type": "io.github.humbleui.skija.FontMgr"
    },
    {
      "type": "io.github.humbleui.skija.FontStyle"
    },
    {
      "type": "io.github.humbleui.skija.FramebufferFormat"
    },
    {
      "type": "io.github.humbleui.skija.Paint"
    },
    {
      "type": "io.github.humbleui.skija.Surface"
    },
    {
      "type": "io.github.humbleui.skija.SurfaceColorFormat"
    },
    {
      "type": "io.github.humbleui.skija.SurfaceOrigin"
    },
    {
      "type": "io.github.humbleui.skija.Typeface"
    },
    {
      "type": "io.github.humbleui.skija.paragraph.FontCollection"
    },
    {
      "type": "io.github.humbleui.skija.paragraph.Paragraph"
    },
    {
      "type": "io.github.humbleui.skija.paragraph.ParagraphBuilder"
    },
    {
      "type": "io.github.humbleui.skija.paragraph.ParagraphStyle"
    },
    {
      "type": "io.github.humbleui.skija.paragraph.TextStyle"
    },
    {
      "type": "io.github.humbleui.skija.paragraph.TypefaceFontProvider"
    },
    {
      "type": "io.github.humbleui.types.Rect"
    },
    {
      "type": "java.io.BufferedInputStream"
    },
    {
      "type": "java.io.BufferedOutputStream"
    },
    {
      "type": "java.io.BufferedReader"
    },
    {
      "type": "java.io.BufferedWriter"
    },
    {
      "type": "java.io.ByteArrayInputStream"
    },
    {
      "type": "java.io.ByteArrayOutputStream"
    },
    {
      "type": "java.io.CharArrayReader"
    },
    {
      "type": "java.io.Closeable"
    },
    {
      "type": "java.io.File"
    },
    {
      "type": "java.io.FileInputStream"
    },
    {
      "type": "java.io.FileOutputStream"
    },
    {
      "type": "java.io.FileWriter"
    },
    {
      "type": "java.io.InputStream"
    },
    {
      "type": "java.io.InputStreamReader"
    },
    {
      "type": "java.io.NotSerializableException"
    },
    {
      "type": "java.io.OutputStream"
    },
    {
      "type": "java.io.OutputStreamWriter"
    },
    {
      "type": "java.io.PrintWriter"
    },
    {
      "type": "java.io.PushbackReader"
    },
    {
      "type": "java.io.Reader"
    },
    {
      "type": "java.io.Serializable"
    },
    {
      "type": "java.io.StringReader"
    },
    {
      "type": "java.io.Writer"
    },
    {
      "type": "java.lang.Boolean"
    },
    {
      "type": "java.lang.Byte"
    },
    {
      "type": "java.lang.Character"
    },
    {
      "type": "java.lang.Class"
    },
    {
      "type": "java.lang.ClassLoader"
    },
    {
      "type": "java.lang.Double"
    },
    {
      "type": "java.lang.Float"
    },
    {
      "type": "java.lang.Integer"
    },
    {
      "type": "java.lang.Iterable"
    },
    {
      "type": "java.lang.Long"
    },
    {
      "type": "java.lang.Number"
    },
    {
      "type": "java.lang.Object",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Runnable"
    },
    {
      "type": "java.lang.Short"
    },
    {
      "type": "java.lang.StackTraceElement"
    },
    {
      "type": "java.lang.String"
    },
    {
      "type": "java.lang.ThreadLocal"
    },
    {
      "type": "java.lang.Throwable"
    },
    {
      "type": "java.lang.UnsupportedOperationException"
    },
    {
      "type": "java.lang.Void"
    },
    {
      "type": "java.lang.annotation.Annotation"
    },
    {
      "type": "java.lang.annotation.Retention"
    },
    {
      "type": "java.lang.ref.ReferenceQueue"
    },
    {
      "type": "java.lang.ref.SoftReference"
    },
    {
      "type": "java.lang.reflect.Array"
    },
    {
      "type": "java.lang.reflect.Constructor"
    },
    {
      "type": "java.lang.reflect.Field"
    },
    {
      "type": "java.lang.reflect.Method",
      "methods": [
        {
          "name": "canAccess",
          "parameterTypes": [
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "java.lang.reflect.Modifier"
    },
    {
      "type": "java.math.BigDecimal"
    },
    {
      "type": "java.math.BigInteger"
    },
    {
      "type": "java.net.InetAddress"
    },
    {
      "type": "java.net.MalformedURLException"
    },
    {
      "type": "java.net.ServerSocket"
    },
    {
      "type": "java.net.Socket"
    },
    {
      "type": "java.net.SocketException"
    },
    {
      "type": "java.net.URI"
    },
    {
      "type": "java.net.URL"
    },
    {
      "type": "java.net.URLDecoder"
    },
    {
      "type": "java.net.URLEncoder"
    },
    {
      "type": "java.nio.Buffer",
      "allDeclaredFields": true
    },
    {
      "type": "java.nio.ByteBuffer",
      "allDeclaredFields": true
    },
    {
      "type": "java.nio.DirectByteBuffer",
      "allDeclaredFields": true,
      "unsafeAllocated": true
    },
    {
      "type": "java.nio.DirectCharBufferU",
      "allDeclaredFields": true
    },
    {
      "type": "java.nio.DirectDoubleBufferU",
      "allDeclaredFields": true
    },
    {
      "type": "java.nio.DirectFloatBufferU",
      "allDeclaredFields": true
    },
    {
      "type": "java.nio.DirectIntBufferU",
      "allDeclaredFields": true,
      "unsafeAllocated": true
    },
    {
      "type": "java.nio.DirectLongBufferU",
      "allDeclaredFields": true
    },
    {
      "type": "java.nio.DirectShortBufferU",
      "allDeclaredFields": true
    },
    {
      "type": "java.nio.MappedByteBuffer",
      "allDeclaredFields": true
    },
    {
      "type": "java.nio.file.Files"
    },
    {
      "type": "java.nio.file.attribute.FileAttribute"
    },
    {
      "type": "java.sql.Timestamp"
    },
    {
      "type": "java.time.Instant"
    },
    {
      "type": "java.util.ArrayList"
    },
    {
      "type": "java.util.Arrays"
    },
    {
      "type": "java.util.Calendar"
    },
    {
      "type": "java.util.Collection"
    },
    {
      "type": "java.util.Date"
    },
    {
      "type": "java.util.GregorianCalendar"
    },
    {
      "type": "java.util.LinkedList"
    },
    {
      "type": "java.util.List"
    },
    {
      "type": "java.util.Map"
    },
    {
      "type": "java.util.Properties"
    },
    {
      "type": "java.util.Queue"
    },
    {
      "type": "java.util.RandomAccess"
    },
    {
      "type": "java.util.Set"
    },
    {
      "type": "java.util.TimeZone"
    },
    {
      "type": "java.util.UUID"
    },
    {
      "type": "java.util.concurrent.ArrayBlockingQueue"
    },
    {
      "type": "java.util.concurrent.BlockingQueue"
    },
    {
      "type": "java.util.concurrent.Callable"
    },
    {
      "type": "java.util.concurrent.ConcurrentHashMap"
    },
    {
      "type": "java.util.concurrent.ConcurrentSkipListMap"
    },
    {
      "type": "java.util.concurrent.DelayQueue"
    },
    {
      "type": "java.util.concurrent.Delayed"
    },
    {
      "type": "java.util.concurrent.Executor"
    },
    {
      "type": "java.util.concurrent.Executors"
    },
    {
      "type": "java.util.concurrent.LinkedBlockingQueue"
    },
    {
      "type": "java.util.concurrent.ThreadFactory"
    },
    {
      "type": "java.util.concurrent.ThreadLocalRandom"
    },
    {
      "type": "java.util.concurrent.TimeUnit"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicLong"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicReferenceArray"
    },
    {
      "type": "java.util.concurrent.locks.Lock"
    },
    {
      "type": "java.util.concurrent.locks.ReentrantLock"
    },
    {
      "type": "java.util.regex.Matcher"
    },
    {
      "type": "java.util.regex.Pattern"
    },
    {
      "type": "org.lwjgl.Version"
    },
    {
      "type": "org.lwjgl.glfw.Callbacks"
    },
    {
      "type": "org.lwjgl.glfw.GLFW",
      "allDeclaredFields": true
    },
    {
      "type": "org.lwjgl.glfw.GLFWErrorCallback"
    },
    {
      "type": "org.lwjgl.opengl.GL"
    },
    {
      "type": "org.lwjgl.opengl.GL11"
    },
    {
      "type": "org.lwjgl.opengl.GL33"
    },
    {
      "type": "org.lwjgl.system.CallbackI"
    },
    {
      "type": "org.lwjgl.system.MemoryStack"
    },
    {
      "type": "org.lwjgl.system.MemoryUtil"
    },
    {
      "type": "org.lwjgl.system.jemalloc.JEmallocAllocator"
    },
    {
      "type": "org.objectweb.asm.Type"
    },
    {
      "type": "sun.misc.Unsafe",
      "allDeclaredFields": true
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ztr.core__init"
    },
    {
      "type": "ztr__init"
    }
  ],
  "resources": [
    {
      "glob": "META-INF/MANIFEST.MF"
    },
    {
      "glob": "META-INF/linux/x64/org/lwjgl/glfw/libglfw.so.sha1"
    },
    {
      "glob": "META-INF/linux/x64/org/lwjgl/liblwjgl.so.sha1"
    },
    {
      "glob": "META-INF/linux/x64/org/lwjgl/opengl/liblwjgl_opengl.so.sha1"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "clojure/core.clj"
    },
    {
      "glob": "clojure/core/async.clj"
    },
    {
      "glob": "clojure/core/async/impl/buffers.clj"
    },
    {
      "glob": "clojure/core/async/impl/buffers__init.class"
    },
    {
      "glob": "clojure/core/async/impl/channels.clj"
    },
    {
      "glob": "clojure/core/async/impl/channels__init.class"
    },
    {
      "glob": "clojure/core/async/impl/concurrent.clj"
    },
    {
      "glob": "clojure/core/async/impl/concurrent__init.class"
    },
    {
      "glob": "clojure/core/async/impl/dispatch.clj"
    },
    {
      "glob": "clojure/core/async/impl/dispatch__init.class"
    },
    {
      "glob": "clojure/core/async/impl/exec/threadpool.clj"
    },
    {
      "glob": "clojure/core/async/impl/exec/threadpool__init.class"
    },
    {
      "glob": "clojure/core/async/impl/go.clj"
    },
    {
      "glob": "clojure/core/async/impl/go__init.class"
    },
    {
      "glob": "clojure/core/async/impl/ioc_macros.clj"
    },
    {
      "glob": "clojure/core/async/impl/ioc_macros__init.class"
    },
    {
      "glob": "clojure/core/async/impl/mutex.clj"
    },
    {
      "glob": "clojure/core/async/impl/mutex__init.class"
    },
    {
      "glob": "clojure/core/async/impl/protocols.clj"
    },
    {
      "glob": "clojure/core/async/impl/protocols__init.class"
    },
    {
      "glob": "clojure/core/async/impl/timers.clj"
    },
    {
      "glob": "clojure/core/async/impl/timers__init.class"
    },
    {
      "glob": "clojure/core/async__init.class"
    },
    {
      "glob": "clojure/core/cache.clj"
    },
    {
      "glob": "clojure/core/cache__init.class"
    },
    {
      "glob": "clojure/core/memoize.clj"
    },
    {
      "glob": "clojure/core/memoize__init.class"
    },
    {
      "glob": "clojure/core/protocols.clj"
    },
    {
      "glob": "clojure/core/protocols__init.class"
    },
    {
      "glob": "clojure/core/server.clj"
    },
    {
      "glob": "clojure/core/server__init.class"
    },
    {
      "glob": "clojure/core__init.class"
    },
    {
      "glob": "clojure/core_deftype.clj"
    },
    {
      "glob": "clojure/core_deftype__init.class"
    },
    {
      "glob": "clojure/core_print.clj"
    },
    {
      "glob": "clojure/core_print__init.class"
    },
    {
      "glob": "clojure/core_proxy.clj"
    },
    {
      "glob": "clojure/core_proxy__init.class"
    },
    {
      "glob": "clojure/data/priority_map.clj"
    },
    {
      "glob": "clojure/data/priority_map__init.class"
    },
    {
      "glob": "clojure/datafy.clj"
    },
    {
      "glob": "clojure/datafy__init.class"
    },
    {
      "glob": "clojure/edn.clj"
    },
    {
      "glob": "clojure/edn__init.class"
    },
    {
      "glob": "clojure/genclass.clj"
    },
    {
      "glob": "clojure/genclass__init.class"
    },
    {
      "glob": "clojure/gvec.clj"
    },
    {
      "glob": "clojure/gvec__init.class"
    },
    {
      "glob": "clojure/instant.clj"
    },
    {
      "glob": "clojure/instant__init.class"
    },
    {
      "glob": "clojure/java/io.clj"
    },
    {
      "glob": "clojure/java/io__init.class"
    },
    {
      "glob": "clojure/main.clj"
    },
    {
      "glob": "clojure/main__init.class"
    },
    {
      "glob": "clojure/reflect.clj"
    },
    {
      "glob": "clojure/reflect/java.clj"
    },
    {
      "glob": "clojure/reflect/java__init.class"
    },
    {
      "glob": "clojure/reflect__init.class"
    },
    {
      "glob": "clojure/set.clj"
    },
    {
      "glob": "clojure/set__init.class"
    },
    {
      "glob": "clojure/spec/alpha.clj"
    },
    {
      "glob": "clojure/spec/alpha__init.class"
    },
    {
      "glob": "clojure/spec/gen/alpha.clj"
    },
    {
      "glob": "clojure/spec/gen/alpha__init.class"
    },
    {
      "glob": "clojure/string.clj"
    },
    {
      "glob": "clojure/string__init.class"
    },
    {
      "glob": "clojure/tools/analyzer.clj"
    },
    {
      "glob": "clojure/tools/analyzer/ast.clj"
    },
    {
      "glob": "clojure/tools/analyzer/ast__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/env.clj"
    },
    {
      "glob": "clojure/tools/analyzer/env__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/jvm.clj"
    },
    {
      "glob": "clojure/tools/analyzer/jvm/utils.clj"
    },
    {
      "glob": "clojure/tools/analyzer/jvm/utils__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/jvm__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/add_binding_atom.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/add_binding_atom__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/cleanup.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/cleanup__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/constant_lifter.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/constant_lifter__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/elide_meta.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/elide_meta__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/emit_form.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/emit_form__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/analyze_host_expr.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/analyze_host_expr__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/annotate_host_info.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/annotate_host_info__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/annotate_loops.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/annotate_loops__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/annotate_tag.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/annotate_tag__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/box.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/box__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/classify_invoke.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/classify_invoke__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/constant_lifter.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/constant_lifter__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/emit_form.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/emit_form__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/fix_case_test.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/fix_case_test__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/infer_tag.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/infer_tag__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/validate.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/validate__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/validate_loop_locals.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/validate_loop_locals__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/validate_recur.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/validate_recur__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/warn_on_reflection.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/jvm/warn_on_reflection__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/source_info.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/source_info__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/trim.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/trim__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/uniquify.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/uniquify__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes/warn_earmuff.clj"
    },
    {
      "glob": "clojure/tools/analyzer/passes/warn_earmuff__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/passes__init.class"
    },
    {
      "glob": "clojure/tools/analyzer/utils.clj"
    },
    {
      "glob": "clojure/tools/analyzer/utils__init.class"
    },
    {
      "glob": "clojure/tools/analyzer__init.class"
    },
    {
      "glob": "clojure/tools/reader.clj"
    },
    {
      "glob": "clojure/tools/reader/default_data_readers.clj"
    },
    {
      "glob": "clojure/tools/reader/default_data_readers__init.class"
    },
    {
      "glob": "clojure/tools/reader/impl/commons.clj"
    },
    {
      "glob": "clojure/tools/reader/impl/commons__init.class"
    },
    {
      "glob": "clojure/tools/reader/impl/errors.clj"
    },
    {
      "glob": "clojure/tools/reader/impl/errors__init.class"
    },
    {
      "glob": "clojure/tools/reader/impl/inspect.clj"
    },
    {
      "glob": "clojure/tools/reader/impl/inspect__init.class"
    },
    {
      "glob": "clojure/tools/reader/impl/utils.clj"
    },
    {
      "glob": "clojure/tools/reader/impl/utils__init.class"
    },
    {
      "glob": "clojure/tools/reader/reader_types.clj"
    },
    {
      "glob": "clojure/tools/reader/reader_types__init.class"
    },
    {
      "glob": "clojure/tools/reader__init.class"
    },
    {
      "glob": "clojure/uuid.clj"
    },
    {
      "glob": "clojure/uuid__init.class"
    },
    {
      "glob": "clojure/version.properties"
    },
    {
      "glob": "clojure/walk.clj"
    },
    {
      "glob": "clojure/walk__init.class"
    },
    {
      "glob": "data_readers.clj"
    },
    {
      "glob": "data_readers.cljc"
    },
    {
      "glob": "io/github/humbleui/skija/impl/Library.class"
    },
    {
      "glob": "io/github/humbleui/skija/linux/x64/libskija.so"
    },
    {
      "glob": "io/github/humbleui/skija/linux/x64/skija.version"
    },
    {
      "glob": "libGLX.so.0"
    },
    {
      "glob": "linux/x64/org/lwjgl/glfw/libglfw.so"
    },
    {
      "glob": "linux/x64/org/lwjgl/liblwjgl.so"
    },
    {
      "glob": "linux/x64/org/lwjgl/opengl/liblwjgl_opengl.so"
    },
    {
      "glob": "org/lwjgl/Version.class"
    },
    {
      "glob": "user.clj"
    },
    {
      "glob": "ztr.clj"
    },
    {
      "glob": "ztr/core.clj"
    },
    {
      "glob": "ztr/core__init.class"
    },
    {
      "glob": "ztr__init.class"
    },
    {
      "module": "java.base",
      "glob": "sun/launcher/resources/launcher_en.properties"
    },
    {
      "module": "java.base",
      "glob": "sun/launcher/resources/launcher_en_US.properties"
    }
  ],
  "bundles": [],
  "jni": [
    {
      "type": "io.github.humbleui.skija.AnimationFrameInfo",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int",
            "boolean",
            "int",
            "boolean",
            "int",
            "int",
            "io.github.humbleui.types.IRect"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.Color4f",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.Drawable",
      "methods": [
        {
          "name": "_onDraw",
          "parameterTypes": [
            "long"
          ]
        },
        {
          "name": "onGetBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.FontFamilyName",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.FontFeature",
      "fields": [
        {
          "name": "_end"
        },
        {
          "name": "_start"
        },
        {
          "name": "_tag"
        },
        {
          "name": "_value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "int"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.FontMetrics",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "java.lang.Float",
            "java.lang.Float",
            "java.lang.Float",
            "java.lang.Float"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.FontMgr"
    },
    {
      "type": "io.github.humbleui.skija.FontVariation",
      "fields": [
        {
          "name": "_tag"
        },
        {
          "name": "_value"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "float"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.FontVariationAxis",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "float",
            "float",
            "float",
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.ImageInfo",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int",
            "long"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.PaintFilterCanvas",
      "methods": [
        {
          "name": "onFilter",
          "parameterTypes": [
            "long"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.Path",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.PathSegment",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "boolean"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "boolean"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "boolean"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float",
            "boolean",
            "boolean"
          ]
        },
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "float",
            "float",
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.RSXform",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.SurfaceProps",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "boolean",
            "int"
          ]
        },
        {
          "name": "_getFlags",
          "parameterTypes": []
        },
        {
          "name": "_getPixelGeometryOrdinal",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.impl.Native",
      "fields": [
        {
          "name": "_ptr"
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.paragraph.DecorationStyle",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "boolean",
            "boolean",
            "boolean",
            "boolean",
            "int",
            "int",
            "float"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.paragraph.LineMetrics",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "long",
            "long",
            "long",
            "boolean",
            "double",
            "double",
            "double",
            "double",
            "double",
            "double",
            "double",
            "long"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.paragraph.Shadow",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "float",
            "float",
            "double"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.paragraph.TextBox",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float",
            "int"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.shaper.BidiRun",
      "fields": [
        {
          "name": "_end"
        },
        {
          "name": "_level"
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.shaper.FontMgrRunIterator"
    },
    {
      "type": "io.github.humbleui.skija.shaper.FontRun",
      "fields": [
        {
          "name": "_end"
        }
      ],
      "methods": [
        {
          "name": "_getFontPtr",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.shaper.HbIcuScriptRunIterator"
    },
    {
      "type": "io.github.humbleui.skija.shaper.IcuBidiRunIterator"
    },
    {
      "type": "io.github.humbleui.skija.shaper.LanguageRun",
      "fields": [
        {
          "name": "_end"
        },
        {
          "name": "_language"
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.shaper.RunHandler",
      "methods": [
        {
          "name": "beginLine",
          "parameterTypes": []
        },
        {
          "name": "commitLine",
          "parameterTypes": []
        },
        {
          "name": "commitRun",
          "parameterTypes": [
            "io.github.humbleui.skija.shaper.RunInfo",
            "short[]",
            "io.github.humbleui.types.Point[]",
            "int[]"
          ]
        },
        {
          "name": "commitRunInfo",
          "parameterTypes": []
        },
        {
          "name": "runInfo",
          "parameterTypes": [
            "io.github.humbleui.skija.shaper.RunInfo"
          ]
        },
        {
          "name": "runOffset",
          "parameterTypes": [
            "io.github.humbleui.skija.shaper.RunInfo"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.shaper.RunInfo",
      "fields": [
        {
          "name": "_fontPtr"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "long",
            "int",
            "float",
            "float",
            "long",
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.shaper.ScriptRun",
      "fields": [
        {
          "name": "_end"
        },
        {
          "name": "_scriptTag"
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.shaper.ShapingOptions",
      "fields": [
        {
          "name": "_approximatePunctuation"
        },
        {
          "name": "_approximateSpaces"
        },
        {
          "name": "_features"
        },
        {
          "name": "_fontMgr"
        },
        {
          "name": "_leftToRight"
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.shaper.TextBlobBuilderRunHandler"
    },
    {
      "type": "io.github.humbleui.skija.shaper.TextLineRunHandler"
    },
    {
      "type": "io.github.humbleui.skija.skottie.LogLevel",
      "fields": [
        {
          "name": "ERROR"
        },
        {
          "name": "WARNING"
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.skottie.Logger",
      "methods": [
        {
          "name": "log",
          "parameterTypes": [
            "io.github.humbleui.skija.skottie.LogLevel",
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.svg.SVGLength",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "float",
            "int"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.skija.svg.SVGPreserveAspectRatio",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.types.IPoint",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.types.IRect",
      "fields": [
        {
          "name": "_bottom"
        },
        {
          "name": "_left"
        },
        {
          "name": "_right"
        },
        {
          "name": "_top"
        }
      ],
      "methods": [
        {
          "name": "makeLTRB",
          "parameterTypes": [
            "int",
            "int",
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.types.Point",
      "fields": [
        {
          "name": "_x"
        },
        {
          "name": "_y"
        }
      ],
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "float",
            "float"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.types.RRect",
      "fields": [
        {
          "name": "_radii"
        }
      ],
      "methods": [
        {
          "name": "makeComplexLTRB",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float",
            "float[]"
          ]
        },
        {
          "name": "makeLTRB",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float",
            "float"
          ]
        },
        {
          "name": "makeLTRB",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float",
            "float",
            "float"
          ]
        },
        {
          "name": "makeLTRB",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float"
          ]
        },
        {
          "name": "makeNinePatchLTRB",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float",
            "float"
          ]
        }
      ]
    },
    {
      "type": "io.github.humbleui.types.Rect",
      "fields": [
        {
          "name": "_bottom"
        },
        {
          "name": "_left"
        },
        {
          "name": "_right"
        },
        {
          "name": "_top"
        }
      ],
      "methods": [
        {
          "name": "makeLTRB",
          "parameterTypes": [
            "float",
            "float",
            "float",
            "float"
          ]
        }
      ]
    },
    {
      "type": "java.io.OutputStream",
      "methods": [
        {
          "name": "flush",
          "parameterTypes": []
        },
        {
          "name": "write",
          "parameterTypes": [
            "byte[]",
            "int",
            "int"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.lang.Float",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "float"
          ]
        }
      ]
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.lang.String"
    },
    {
      "type": "java.lang.Throwable",
      "methods": [
        {
          "name": "printStackTrace",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.Iterator",
      "methods": [
        {
          "name": "hasNext",
          "parameterTypes": []
        },
        {
          "name": "next",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.util.function.BooleanSupplier",
      "methods": [
        {
          "name": "getAsBoolean",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.lwjgl.system.CallbackI",
      "methods": [
        {
          "name": "callback",
          "parameterTypes": [
            "long",
            "long"
          ]
        }
      ]
    },
    {
      "type": "ztr",
      "methods": [
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    }
  ]
}